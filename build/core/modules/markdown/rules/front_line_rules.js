'use strict';exports.__esModule=true;var frontLineRules={parse:function parse(secs,rule){var newSecs=[];var str='';secs.forEach(function(s,i){if(s.indexOf(rule.begin)!==0){if(str){newSecs.push(str+rule.wrapEnd);str=''}newSecs.push(s)}else{if(str){str+=s.replace(rule.begin,rule.innerBegin)+rule.innerEnd}else{str+=s.replace(rule.begin,rule.wrapBegin+rule.innerBegin)+rule.innerEnd}if(secs.length==i+1){newSecs.push(str+rule.wrapEnd)}}});return newSecs},blockquote:{begin:'> ',wrapBegin:'<blockquote>',wrapEnd:'</blockquote>',innerBegin:'<div class="text">',innerEnd:'</div>'},h1:{begin:'# ',wrapBegin:'',wrapEnd:'',innerBegin:'<div class="title">',innerEnd:'</div>'},h2:{begin:'## ',wrapBegin:'',wrapEnd:'',innerBegin:'<div class="subtitle">',innerEnd:'</div>'},h3:{begin:'### ',wrapBegin:'',wrapEnd:'',innerBegin:'<div class="section">',innerEnd:'</div>'},hr:{begin:'---',wrapBegin:'',wrapEnd:'',innerBegin:'',innerEnd:'<hr class="line-dotted" />'},hrThick:{begin:'___',wrapBegin:'',wrapEnd:'',innerBegin:'',innerEnd:'<hr class="line" />'},hrDouble:{begin:'***',wrapBegin:'',wrapEnd:'',innerBegin:'',innerEnd:'<hr class="line-double" />'},tip:{begin:'++ ',wrapBegin:'<div class="tip">',wrapEnd:'</div>',innerBegin:'<div class="text">',innerEnd:'</div>'},warning:{begin:'!! ',wrapBegin:'<div class="warning">',wrapEnd:'</div>',innerBegin:'<div class="text">',innerEnd:'</div>'}};var _default=frontLineRules;exports.default=_default;;var _temp=function(){if(typeof __REACT_HOT_LOADER__==='undefined'){return}__REACT_HOT_LOADER__.register(frontLineRules,'frontLineRules','core/modules/markdown/rules/front_line_rules.js');__REACT_HOT_LOADER__.register(_default,'default','core/modules/markdown/rules/front_line_rules.js')}();;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZyb250X2xpbmVfcnVsZXMuanMiXSwibmFtZXMiOlsiZnJvbnRMaW5lUnVsZXMiLCJwYXJzZSIsInNlY3MiLCJydWxlIiwibmV3U2VjcyIsInN0ciIsImZvckVhY2giLCJzIiwiaSIsImluZGV4T2YiLCJiZWdpbiIsInB1c2giLCJ3cmFwRW5kIiwicmVwbGFjZSIsImlubmVyQmVnaW4iLCJpbm5lckVuZCIsIndyYXBCZWdpbiIsImxlbmd0aCIsImJsb2NrcXVvdGUiLCJoMSIsImgyIiwiaDMiLCJociIsImhyVGhpY2siLCJockRvdWJsZSIsInRpcCIsIndhcm5pbmciXSwibWFwcGluZ3MiOiJxQ0FBQSxHQUFNQSxnQkFBaUIsQ0FDckJDLE1BQU8sZUFBQ0MsSUFBRCxDQUFPQyxJQUFQLENBQWdCLENBRXJCLEdBQUlDLFNBQVUsRUFBZCxDQUNBLEdBQUlDLEtBQU0sRUFBVixDQUVBSCxLQUFLSSxPQUFMLENBQWEsU0FBQ0MsQ0FBRCxDQUFJQyxDQUFKLENBQVUsQ0FFckIsR0FBSUQsRUFBRUUsT0FBRixDQUFVTixLQUFLTyxLQUFmLElBQTBCLENBQTlCLENBQWlDLENBQy9CLEdBQUlMLEdBQUosQ0FBUyxDQUNQRCxRQUFRTyxJQUFSLENBQWFOLElBQU1GLEtBQUtTLE9BQXhCLEVBQ0FQLElBQU0sRUFDUCxDQUNERCxRQUFRTyxJQUFSLENBQWFKLENBQWIsQ0FDRCxDQU5ELElBUUssQ0FFSCxHQUFJRixHQUFKLENBQVMsQ0FDUEEsS0FBT0UsRUFBRU0sT0FBRixDQUFVVixLQUFLTyxLQUFmLENBQXNCUCxLQUFLVyxVQUEzQixFQUF5Q1gsS0FBS1ksUUFDdEQsQ0FGRCxJQUdLLENBQ0hWLEtBQU9FLEVBQUVNLE9BQUYsQ0FBVVYsS0FBS08sS0FBZixDQUFzQlAsS0FBS2EsU0FBTCxDQUFpQmIsS0FBS1csVUFBNUMsRUFBMERYLEtBQUtZLFFBQ3ZFLENBRUQsR0FBSWIsS0FBS2UsTUFBTCxFQUFlVCxFQUFFLENBQXJCLENBQXdCLENBQ3RCSixRQUFRTyxJQUFSLENBQWFOLElBQU1GLEtBQUtTLE9BQXhCLENBQ0QsQ0FDRixDQUNGLENBdkJELEVBeUJBLE1BQU9SLFFBQ1IsQ0FoQ29CLENBaUNyQmMsV0FBWSxDQUNWUixNQUFPLElBREcsQ0FFVk0sd0JBRlUsQ0FHVkosdUJBSFUsQ0FJVkUsK0JBSlUsQ0FLVkMsaUJBTFUsQ0FqQ1MsQ0F3Q3JCSSxHQUFJLENBQ0ZULE1BQU8sSUFETCxDQUVGTSxZQUZFLENBR0ZKLFVBSEUsQ0FJRkUsZ0NBSkUsQ0FLRkMsaUJBTEUsQ0F4Q2lCLENBK0NyQkssR0FBSSxDQUNGVixNQUFPLEtBREwsQ0FFRk0sWUFGRSxDQUdGSixVQUhFLENBSUZFLG1DQUpFLENBS0ZDLGlCQUxFLENBL0NpQixDQXNEckJNLEdBQUksQ0FDRlgsTUFBTyxNQURMLENBRUZNLFlBRkUsQ0FHRkosVUFIRSxDQUlGRSxrQ0FKRSxDQUtGQyxpQkFMRSxDQXREaUIsQ0E2RHJCTyxHQUFJLENBQ0ZaLE1BQU8sS0FETCxDQUVGTSxZQUZFLENBR0ZKLFVBSEUsQ0FJRkUsYUFKRSxDQUtGQyxxQ0FMRSxDQTdEaUIsQ0FvRXJCUSxRQUFTLENBQ1BiLE1BQU8sS0FEQSxDQUVQTSxZQUZPLENBR1BKLFVBSE8sQ0FJUEUsYUFKTyxDQUtQQyw4QkFMTyxDQXBFWSxDQTJFckJTLFNBQVUsQ0FDUmQsTUFBTyxLQURDLENBRVJNLFlBRlEsQ0FHUkosVUFIUSxDQUlSRSxhQUpRLENBS1JDLHFDQUxRLENBM0VXLENBa0ZyQlUsSUFBSyxDQUNIZixNQUFPLEtBREosQ0FFSE0sNkJBRkcsQ0FHSEosZ0JBSEcsQ0FJSEUsK0JBSkcsQ0FLSEMsaUJBTEcsQ0FsRmdCLENBeUZyQlcsUUFBUyxDQUNQaEIsTUFBTyxLQURBLENBRVBNLGlDQUZPLENBR1BKLGdCQUhPLENBSVBFLCtCQUpPLENBS1BDLGlCQUxPLENBekZZLENBQXZCLEMsYUFtR2VmLGMsbUlBbkdUQSxjIiwiZmlsZSI6ImZyb250X2xpbmVfcnVsZXMuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3RvbnluZ3V5ZW4vSWRlYVByb2plY3RzL2NvZGVmb3JhcHBzL3Rvb2xzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZnJvbnRMaW5lUnVsZXMgPSB7XG4gIHBhcnNlOiAoc2VjcywgcnVsZSkgPT4ge1xuXG4gICAgbGV0IG5ld1NlY3MgPSBbXTtcbiAgICBsZXQgc3RyID0gJyc7XG5cbiAgICBzZWNzLmZvckVhY2goKHMsIGkpID0+IHtcbiAgICAgIC8vIEN1cnJlbnQgc2VjdGlvbiBkb2VzIG5vdCBtYXRjaCBydWxlOlxuICAgICAgaWYgKHMuaW5kZXhPZihydWxlLmJlZ2luKSAhPT0gMCkge1xuICAgICAgICBpZiAoc3RyKSB7XG4gICAgICAgICAgbmV3U2Vjcy5wdXNoKHN0ciArIHJ1bGUud3JhcEVuZCk7XG4gICAgICAgICAgc3RyID0gJyc7XG4gICAgICAgIH1cbiAgICAgICAgbmV3U2Vjcy5wdXNoKHMpO1xuICAgICAgfVxuICAgICAgLy8gSWYgdGhlcmUgaXMgYSBjdXJyZW50IG1hdGNoIHRvIHRoZSBydWxlXG4gICAgICBlbHNlIHtcbiAgICAgICAgLy8gaWYgdGhlcmUncyBhIHByZXZpb3VzIG1hdGNoLCBhZGQgdGhpcyBvbiB0byB0aGF0XG4gICAgICAgIGlmIChzdHIpIHtcbiAgICAgICAgICBzdHIgKz0gcy5yZXBsYWNlKHJ1bGUuYmVnaW4sIHJ1bGUuaW5uZXJCZWdpbikgKyBydWxlLmlubmVyRW5kO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIHN0ciArPSBzLnJlcGxhY2UocnVsZS5iZWdpbiwgcnVsZS53cmFwQmVnaW4gKyBydWxlLmlubmVyQmVnaW4pICsgcnVsZS5pbm5lckVuZDtcbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB3ZSdyZSBkb25lIHdpdGggYWxsIHRoZSBzZWN0aW9uc1xuICAgICAgICBpZiAoc2Vjcy5sZW5ndGggPT0gaSsxKSB7XG4gICAgICAgICAgbmV3U2Vjcy5wdXNoKHN0ciArIHJ1bGUud3JhcEVuZCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBuZXdTZWNzO1xuICB9LFxuICBibG9ja3F1b3RlOiB7XG4gICAgYmVnaW46ICc+ICcsXG4gICAgd3JhcEJlZ2luOiBgPGJsb2NrcXVvdGU+YCxcbiAgICB3cmFwRW5kOiBgPC9ibG9ja3F1b3RlPmAsXG4gICAgaW5uZXJCZWdpbjogYDxkaXYgY2xhc3M9XCJ0ZXh0XCI+YCxcbiAgICBpbm5lckVuZDogYDwvZGl2PmBcbiAgfSxcbiAgaDE6IHtcbiAgICBiZWdpbjogJyMgJyxcbiAgICB3cmFwQmVnaW46IGBgLFxuICAgIHdyYXBFbmQ6IGBgLFxuICAgIGlubmVyQmVnaW46IGA8ZGl2IGNsYXNzPVwidGl0bGVcIj5gLFxuICAgIGlubmVyRW5kOiBgPC9kaXY+YFxuICB9LFxuICBoMjoge1xuICAgIGJlZ2luOiAnIyMgJyxcbiAgICB3cmFwQmVnaW46IGBgLFxuICAgIHdyYXBFbmQ6IGBgLFxuICAgIGlubmVyQmVnaW46IGA8ZGl2IGNsYXNzPVwic3VidGl0bGVcIj5gLFxuICAgIGlubmVyRW5kOiBgPC9kaXY+YFxuICB9LFxuICBoMzoge1xuICAgIGJlZ2luOiAnIyMjICcsXG4gICAgd3JhcEJlZ2luOiBgYCxcbiAgICB3cmFwRW5kOiBgYCxcbiAgICBpbm5lckJlZ2luOiBgPGRpdiBjbGFzcz1cInNlY3Rpb25cIj5gLFxuICAgIGlubmVyRW5kOiBgPC9kaXY+YFxuICB9LFxuICBocjoge1xuICAgIGJlZ2luOiAnLS0tJyxcbiAgICB3cmFwQmVnaW46IGBgLFxuICAgIHdyYXBFbmQ6IGBgLFxuICAgIGlubmVyQmVnaW46IGBgLFxuICAgIGlubmVyRW5kOiBgPGhyIGNsYXNzPVwibGluZS1kb3R0ZWRcIiAvPmBcbiAgfSxcbiAgaHJUaGljazoge1xuICAgIGJlZ2luOiAnX19fJyxcbiAgICB3cmFwQmVnaW46IGBgLFxuICAgIHdyYXBFbmQ6IGBgLFxuICAgIGlubmVyQmVnaW46IGBgLFxuICAgIGlubmVyRW5kOiBgPGhyIGNsYXNzPVwibGluZVwiIC8+YFxuICB9LFxuICBockRvdWJsZToge1xuICAgIGJlZ2luOiAnKioqJyxcbiAgICB3cmFwQmVnaW46IGBgLFxuICAgIHdyYXBFbmQ6IGBgLFxuICAgIGlubmVyQmVnaW46IGBgLFxuICAgIGlubmVyRW5kOiBgPGhyIGNsYXNzPVwibGluZS1kb3VibGVcIiAvPmBcbiAgfSxcbiAgdGlwOiB7XG4gICAgYmVnaW46ICcrKyAnLFxuICAgIHdyYXBCZWdpbjogYDxkaXYgY2xhc3M9XCJ0aXBcIj5gLFxuICAgIHdyYXBFbmQ6IGA8L2Rpdj5gLFxuICAgIGlubmVyQmVnaW46IGA8ZGl2IGNsYXNzPVwidGV4dFwiPmAsXG4gICAgaW5uZXJFbmQ6IGA8L2Rpdj5gXG4gIH0sXG4gIHdhcm5pbmc6IHtcbiAgICBiZWdpbjogJyEhICcsXG4gICAgd3JhcEJlZ2luOiBgPGRpdiBjbGFzcz1cIndhcm5pbmdcIj5gLFxuICAgIHdyYXBFbmQ6IGA8L2Rpdj5gLFxuICAgIGlubmVyQmVnaW46IGA8ZGl2IGNsYXNzPVwidGV4dFwiPmAsXG4gICAgaW5uZXJFbmQ6IGA8L2Rpdj5gXG4gIH1cblxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnJvbnRMaW5lUnVsZXM7Il19