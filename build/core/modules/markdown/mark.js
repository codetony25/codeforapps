'use strict';exports.__esModule=true;exports.mark=undefined;var _code_rules=require('./rules/code_rules');var _code_rules2=_interopRequireDefault(_code_rules);var _front_line_rules=require('./rules/front_line_rules');var _front_line_rules2=_interopRequireDefault(_front_line_rules);var _wrapper_rules=require('./rules/wrapper_rules');var _wrapper_rules2=_interopRequireDefault(_wrapper_rules);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var code=[];var handleParagraphBlocks=function handleParagraphBlocks(str){if(!str)return str;var secs=str.split('\n');secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.blockquote);secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.h1);secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.h2);secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.h3);secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.hr);secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.hrDouble);secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.hrThick);secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.tip);secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.warning);str='<div class="paragraph">'+secs.join('</div><div class="paragraph">')+'</div>';str=_wrapper_rules2.default.parse(str,_wrapper_rules2.default.icon);str=_wrapper_rules2.default.parse(str,_wrapper_rules2.default.italic);str=_wrapper_rules2.default.parse(str,_wrapper_rules2.default.strike);str=_wrapper_rules2.default.parse(str,_wrapper_rules2.default.strong);return str};var handleCodeRules=function handleCodeRules(str){if(!str)return str;var moreToReplace=true;while(moreToReplace){var idx1=str.indexOf('```');var idx2=str.indexOf('```',idx1+3);if(idx1<idx2){var codeStr=str.slice(idx1,idx2+4);var lang='';var file='';var topStr=(codeStr.match(/```(.+)\n/)||[])[1];if(topStr){var _idx=topStr.indexOf('[');var _idx2=topStr.indexOf(']');if(_idx<_idx2){file=topStr.slice(_idx+1,_idx2)}lang=topStr.replace('['+file+']','')}var langSpan='';if(lang){langSpan='<span class="language '+lang.toLowerCase()+'">'+lang+'</span>'}var fileSpan='';if(file){fileSpan='<span class="file '+lang.toLowerCase()+'">'+file+'</span>'}str=str.replace(codeStr,'[%-!code'+code.length+'!-%]');codeStr=codeStr.replace(topStr,'');codeStr=codeStr.replace('```','');codeStr=codeStr.replace('```','');code.push('\n        <div class="codeblock">\n          <span class="title-bar">\n            '+langSpan+'\n            '+fileSpan+'\n          </span>\n          <pre>\n            '+_code_rules2.default.parse(codeStr,lang)+'\n          </pre>\n        </div>')}else{moreToReplace=false}}console.log(code);return str};var handleInternalMarkers=function handleInternalMarkers(str){code.forEach(function(c,i){return str=str.replace('[%-!code'+i+'!-%]',c)});code=[];return str};var mark=exports.mark=function mark(str){str=handleCodeRules(str);str=handleParagraphBlocks(str);str=handleInternalMarkers(str);console.log(str);return str};;var _temp=function(){if(typeof __REACT_HOT_LOADER__==='undefined'){return}__REACT_HOT_LOADER__.register(code,'code','core/modules/markdown/mark.js');__REACT_HOT_LOADER__.register(handleParagraphBlocks,'handleParagraphBlocks','core/modules/markdown/mark.js');__REACT_HOT_LOADER__.register(handleCodeRules,'handleCodeRules','core/modules/markdown/mark.js');__REACT_HOT_LOADER__.register(handleInternalMarkers,'handleInternalMarkers','core/modules/markdown/mark.js');__REACT_HOT_LOADER__.register(mark,'mark','core/modules/markdown/mark.js')}();;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcmsuanMiXSwibmFtZXMiOlsiY29kZSIsImhhbmRsZVBhcmFncmFwaEJsb2NrcyIsInN0ciIsInNlY3MiLCJzcGxpdCIsInBhcnNlIiwiYmxvY2txdW90ZSIsImgxIiwiaDIiLCJoMyIsImhyIiwiaHJEb3VibGUiLCJoclRoaWNrIiwidGlwIiwid2FybmluZyIsImpvaW4iLCJpY29uIiwiaXRhbGljIiwic3RyaWtlIiwic3Ryb25nIiwiaGFuZGxlQ29kZVJ1bGVzIiwibW9yZVRvUmVwbGFjZSIsImlkeDEiLCJpbmRleE9mIiwiaWR4MiIsImNvZGVTdHIiLCJzbGljZSIsImxhbmciLCJmaWxlIiwidG9wU3RyIiwibWF0Y2giLCJyZXBsYWNlIiwibGFuZ1NwYW4iLCJ0b0xvd2VyQ2FzZSIsImZpbGVTcGFuIiwibGVuZ3RoIiwicHVzaCIsImNvbnNvbGUiLCJsb2ciLCJoYW5kbGVJbnRlcm5hbE1hcmtlcnMiLCJmb3JFYWNoIiwiYyIsImkiLCJtYXJrIl0sIm1hcHBpbmdzIjoiNERBQUEsOEMscURBQ0EsMEQsaUVBQ0Esb0QsNklBR0EsR0FBSUEsTUFBTyxFQUFYLENBT0EsR0FBTUMsdUJBQXdCLFFBQXhCQSxzQkFBd0IsQ0FBQ0MsR0FBRCxDQUFTLENBQ3JDLEdBQUksQ0FBQ0EsR0FBTCxDQUFVLE1BQU9BLElBQVAsQ0FDVixHQUFJQyxNQUFPRCxJQUFJRSxLQUFKLENBQVUsSUFBVixDQUFYLENBQ0FELEtBQU8sMkJBQWVFLEtBQWYsQ0FBcUJGLElBQXJCLENBQTJCLDJCQUFlRyxVQUExQyxDQUFQLENBQ0FILEtBQU8sMkJBQWVFLEtBQWYsQ0FBcUJGLElBQXJCLENBQTJCLDJCQUFlSSxFQUExQyxDQUFQLENBQ0FKLEtBQU8sMkJBQWVFLEtBQWYsQ0FBcUJGLElBQXJCLENBQTJCLDJCQUFlSyxFQUExQyxDQUFQLENBQ0FMLEtBQU8sMkJBQWVFLEtBQWYsQ0FBcUJGLElBQXJCLENBQTJCLDJCQUFlTSxFQUExQyxDQUFQLENBQ0FOLEtBQU8sMkJBQWVFLEtB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RCxDQTdDRCxJQTZDTyxDQUNMTixjQUFnQixLQUNqQixDQUNGLENBQ0RnQixRQUFRQyxHQUFSLENBQVl0QyxJQUFaLEVBQ0EsTUFBT0UsSUFDUixDQTNERCxDQTZEQSxHQUFNcUMsdUJBQXdCLFFBQXhCQSxzQkFBd0IsQ0FBQ3JDLEdBQUQsQ0FBUyxDQUlyQ0YsS0FBS3dDLE9BQUwsQ0FBYSxTQUFDQyxDQUFELENBQUlDLENBQUosUUFBVXhDLEtBQU1BLElBQUk2QixPQUFKLFlBQXVCVyxDQUF2QixRQUFnQ0QsQ0FBaEMsQ0FBaEIsQ0FBYixFQUNBekMsS0FBTyxFQUFQLENBQ0EsTUFBT0UsSUFDUixDQVBELENBU08sR0FBTXlDLG1CQUFPLFFBQVBBLEtBQU8sQ0FBQ3pDLEdBQUQsQ0FBUyxDQUkzQkEsSUFBTWtCLGdCQUFnQmxCLEdBQWhCLENBQU4sQ0FFQUEsSUFBTUQsc0JBQXNCQyxHQUF0QixDQUFOLENBRUFBLElBQU1xQyxzQkFBc0JyQyxHQUF0QixDQUFOLENBRUFtQyxRQUFRQyxHQUFSLENBQVlwQyxHQUFaLEVBRUEsTUFBT0EsSUFDUixDQWJNLEMseUdBckdIRixJLHVFQU9FQyxxQix3RkF3QkFtQixlLGtGQTZEQW1CLHFCLHdGQVNPSSxJIiwiZmlsZSI6Im1hcmsuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3RvbnluZ3V5ZW4vRG9jdW1lbnRzL0dpdEh1Yi9jb2RlZm9yYXBwcy90b29scyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb2RlUnVsZXMgZnJvbSAnLi9ydWxlcy9jb2RlX3J1bGVzJztcbmltcG9ydCBmcm9udExpbmVSdWxlcyBmcm9tICcuL3J1bGVzL2Zyb250X2xpbmVfcnVsZXMnO1xuaW1wb3J0IHdyYXBwZXJSdWxlcyAgIGZyb20gJy4vcnVsZXMvd3JhcHBlcl9ydWxlcyc7XG5cbi8vIEZvciBoYW5kbGluZyBjb2RlIGJsb2Nrc1xubGV0IGNvZGUgPSBbXTtcblxuLyoqXG4gKiBUaGVzZSBhcmUgdGhlIHJ1bGVzIHRoYXQgY2FuJ3QgY3Jvc3MgdGhyb3VnaCBuZXcgbGluZXNcbiAqIEBwYXJhbSBzdHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmNvbnN0IGhhbmRsZVBhcmFncmFwaEJsb2NrcyA9IChzdHIpID0+IHtcbiAgaWYgKCFzdHIpIHJldHVybiBzdHI7XG4gIGxldCBzZWNzID0gc3RyLnNwbGl0KCdcXG4nKTtcbiAgc2VjcyA9IGZyb250TGluZVJ1bGVzLnBhcnNlKHNlY3MsIGZyb250TGluZVJ1bGVzLmJsb2NrcXVvdGUpO1xuICBzZWNzID0gZnJvbnRMaW5lUnVsZXMucGFyc2Uoc2VjcywgZnJvbnRMaW5lUnVsZXMuaDEpO1xuICBzZWNzID0gZnJvbnRMaW5lUnVsZXMucGFyc2Uoc2VjcywgZnJvbnRMaW5lUnVsZXMuaDIpO1xuICBzZWNzID0gZnJvbnRMaW5lUnVsZXMucGFyc2Uoc2VjcywgZnJvbnRMaW5lUnVsZXMuaDMpO1xuICBzZWNzID0gZnJvbnRMaW5lUnVsZXMucGFyc2Uoc2VjcywgZnJvbnRMaW5lUnVsZXMuaHIpO1xuICBzZWNzID0gZnJvbnRMaW5lUnVsZXMucGFyc2Uoc2VjcywgZnJvbnRMaW5lUnVsZXMuaHJEb3VibGUpO1xuICBzZWNzID0gZnJvbnRMaW5lUnVsZXMucGFyc2Uoc2VjcywgZnJvbnRMaW5lUnVsZXMuaHJUaGljayk7XG4gIHNlY3MgPSBmcm9udExpbmVSdWxlcy5wYXJzZShzZWNzLCBmcm9udExpbmVSdWxlcy50aXApO1xuICBzZWNzID0gZnJvbnRMaW5lUnVsZXMucGFyc2Uoc2VjcywgZnJvbnRMaW5lUnVsZXMud2FybmluZyk7XG5cbiAgc3RyID0gYDxkaXYgY2xhc3M9XCJwYXJhZ3JhcGhcIj4ke3NlY3Muam9pbignPC9kaXY+PGRpdiBjbGFzcz1cXFwicGFyYWdyYXBoXFxcIj4nKX08L2Rpdj5gO1xuICBcbiAgc3RyID0gd3JhcHBlclJ1bGVzLnBhcnNlKHN0ciwgd3JhcHBlclJ1bGVzLmljb24pO1xuICBzdHIgPSB3cmFwcGVyUnVsZXMucGFyc2Uoc3RyLCB3cmFwcGVyUnVsZXMuaXRhbGljKTtcbiAgc3RyID0gd3JhcHBlclJ1bGVzLnBhcnNlKHN0ciwgd3JhcHBlclJ1bGVzLnN0cmlrZSk7XG4gIHN0ciA9IHdyYXBwZXJSdWxlcy5wYXJzZShzdHIsIHdyYXBwZXJSdWxlcy5zdHJvbmcpO1xuXG4gIHJldHVybiBzdHI7XG5cbn07XG5cbmNvbnN0IGhhbmRsZUNvZGVSdWxlcyA9IChzdHIpID0+IHtcbiAgaWYgKCFzdHIpIHJldHVybiBzdHI7XG4gIGxldCBtb3JlVG9SZXBsYWNlID0gdHJ1ZTtcbiAgd2hpbGUgKG1vcmVUb1JlcGxhY2UpIHtcbiAgICBsZXQgaWR4MSA9IHN0ci5pbmRleE9mKCdgYGAnKTtcbiAgICBsZXQgaWR4MiA9IHN0ci5pbmRleE9mKCdgYGAnLCBpZHgxICsgMyk7XG5cbiAgICAvLyBpZiBjb2RlYmxvY2sgZm91bmRcbiAgICBpZiAoaWR4MSA8IGlkeDIpIHtcbiAgICAgIC8vIGdyYWIgdGhlIGNvbXBsZXRlIGNvZGUgc3RyaW5nIHdpdGggdGlja3MgYW5kIGxhbmd1YWdlXG4gICAgICBsZXQgY29kZVN0ciA9IHN0ci5zbGljZShpZHgxLCBpZHgyKzQpO1xuXG4gICAgICAvLyBncmFiIHRoZSBsYW5ndWFnZSBhbmQgZmlsZW5hbWUgaWYgdGhleSBleGlzdCBmcm9tIHRoZSB0b3BcbiAgICAgIGxldCBsYW5nID0gJyc7XG4gICAgICBsZXQgZmlsZSA9ICcnO1xuICAgICAgbGV0IHRvcFN0ciA9IChjb2RlU3RyLm1hdGNoKC9gYGAoLispXFxuLykgfHwgW10pWzFdO1xuICAgICAgaWYgKHRvcFN0cikge1xuICAgICAgICBjb25zdCBpZHgxID0gdG9wU3RyLmluZGV4T2YoJ1snKTtcbiAgICAgICAgY29uc3QgaWR4MiA9IHRvcFN0ci5pbmRleE9mKCddJyk7XG4gICAgICAgIGlmIChpZHgxIDwgaWR4Mikge1xuICAgICAgICAgIGZpbGUgPSB0b3BTdHIuc2xpY2UoaWR4MSsxLGlkeDIpO1xuICAgICAgICB9XG4gICAgICAgIGxhbmcgPSB0b3BTdHIucmVwbGFjZShgWyR7ZmlsZX1dYCwgJycpO1xuICAgICAgfVxuXG4gICAgICAvLyBjcmVhdGUgdGhlIGxhbmd1YWdlIGFuZCBmaWxlbmFtZSBzcGFuc1xuICAgICAgbGV0IGxhbmdTcGFuID0gJyc7XG4gICAgICBpZiAobGFuZykge1xuICAgICAgICBsYW5nU3BhbiA9IGA8c3BhbiBjbGFzcz1cImxhbmd1YWdlICR7bGFuZy50b0xvd2VyQ2FzZSgpfVwiPiR7bGFuZ308L3NwYW4+YDtcbiAgICAgIH1cbiAgICAgIGxldCBmaWxlU3BhbiA9ICcnO1xuICAgICAgaWYgKGZpbGUpIHtcbiAgICAgICAgZmlsZVNwYW4gPSBgPHNwYW4gY2xhc3M9XCJmaWxlICR7bGFuZy50b0xvd2VyQ2FzZSgpfVwiPiR7ZmlsZX08L3NwYW4+YDtcbiAgICAgIH1cbiAgICAgIC8vIHJlcGxhY2UgdGhlIGNvZGUgc3RyaW5nIHdpdGggYW4gaW50ZXJuYWwgbWFya2VyIGluIHRoZSBvcmlnaW5hbCBzdHJpbmdcbiAgICAgIHN0ciA9IHN0ci5yZXBsYWNlKGNvZGVTdHIsICdbJS0hY29kZScgKyBjb2RlLmxlbmd0aCArICchLSVdJyk7XG5cbiAgICAgIC8vIGNsZWFuIHVwIHRoZSBjb2RlIHN0cmluZyBiZWZvcmUgcGFzc2luZyBpdCB0byB0aGUgY29kZVJ1bGVzIGhpZ2hsaWdodGVyXG4gICAgICBjb2RlU3RyID0gY29kZVN0ci5yZXBsYWNlKHRvcFN0ciwgJycpO1xuICAgICAgY29kZVN0ciA9IGNvZGVTdHIucmVwbGFjZSgnYGBgJywnJyk7XG4gICAgICBjb2RlU3RyID0gY29kZVN0ci5yZXBsYWNlKCdgYGAnLCcnKTtcblxuICAgICAgLy8gcHVzaCB0aGUgaGlnaGxpZ2h0IHJlc3VsdCBpbnRvIHRoZSBjb2RlIGdsb2JhbFxuICAgICAgY29kZS5wdXNoKGBcbiAgICAgICAgPGRpdiBjbGFzcz1cImNvZGVibG9ja1wiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGl0bGUtYmFyXCI+XG4gICAgICAgICAgICAke2xhbmdTcGFufVxuICAgICAgICAgICAgJHtmaWxlU3Bhbn1cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgPHByZT5cbiAgICAgICAgICAgICR7Y29kZVJ1bGVzLnBhcnNlKGNvZGVTdHIsIGxhbmcpfVxuICAgICAgICAgIDwvcHJlPlxuICAgICAgICA8L2Rpdj5gKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbW9yZVRvUmVwbGFjZSA9IGZhbHNlO1xuICAgIH1cbiAgfVxuICBjb25zb2xlLmxvZyhjb2RlKTtcbiAgcmV0dXJuIHN0cjtcbn07XG5cbmNvbnN0IGhhbmRsZUludGVybmFsTWFya2VycyA9IChzdHIpID0+IHtcbiAgLy8gRm9yIGVhY2ggaXRlbSBpbiBjb2RlW10sIHJlcGxhY2Ugb3VyIGludGVybmFsIG1hcmtlciB3aXRoIGl0XG4gIC8vIG91ciBpbnRlcm5hbCBtYXJrZXIgZm9yIGNvZGUgaXMgWyUtIWNvZGUjIS0lXSB3aGVyZSAjIGlzIHRoZSBpbmRleCBpblxuICAvLyB0aGUgY29kZSBhcnJheS5cbiAgY29kZS5mb3JFYWNoKChjLCBpKSA9PiBzdHIgPSBzdHIucmVwbGFjZShgWyUtIWNvZGUke2l9IS0lXWAsIGMpKTtcbiAgY29kZSA9IFtdO1xuICByZXR1cm4gc3RyO1xufTtcblxuZXhwb3J0IGNvbnN0IG1hcmsgPSAoc3RyKSA9PiB7XG5cbiAgLy8gRmlyc3Qgd2UncmUgZ29pbmcgdG8gY2hlY2sgZm9yIGNvZGUsIHB1bGwgdGhlbSBvdXQgYW5kIHJlcGxhY2UgdGhlbSB3aXRoIGludGVybmFsXG4gIC8vIG1hcmtlcnMgdG8gdGhlaXIgbG9jYXRpb24sIHNvIHRoYXQgdGhleSBkb24ndCBnZXQgbXVuZ2VkIGJ5IG90aGVyIHJ1bGVzXG4gIHN0ciA9IGhhbmRsZUNvZGVSdWxlcyhzdHIpO1xuICAvLyBOb3cgcnVuIG91ciBydWxlcyB0aGF0IGFyZSBib3VuZCBieSBwYXJhZ3JhcGhcbiAgc3RyID0gaGFuZGxlUGFyYWdyYXBoQmxvY2tzKHN0cik7XG4gIC8vIE5vdyB3ZSBjYW4gcmVwbGFjZSBvdXIgaW50ZXJuYWwgbWFya2Vyc1xuICBzdHIgPSBoYW5kbGVJbnRlcm5hbE1hcmtlcnMoc3RyKTtcblxuICBjb25zb2xlLmxvZyhzdHIpO1xuICAvLyBSZXR1cm4gdGhlIHJlc3VsdFxuICByZXR1cm4gc3RyO1xufTtcbiJdfQ==