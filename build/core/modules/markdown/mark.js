'use strict';exports.__esModule=true;exports.mark=undefined;var _code_rules=require('./rules/code_rules');var _code_rules2=_interopRequireDefault(_code_rules);var _front_line_rules=require('./rules/front_line_rules');var _front_line_rules2=_interopRequireDefault(_front_line_rules);var _wrapper_rules=require('./rules/wrapper_rules');var _wrapper_rules2=_interopRequireDefault(_wrapper_rules);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var code=[];var handleParagraphBlocks=function handleParagraphBlocks(str){if(!str)return str;var secs=str.split('\n');secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.blockquote);secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.h1);secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.h2);secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.h3);secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.hr);secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.hrDouble);secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.hrThick);secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.tip);secs=_front_line_rules2.default.parse(secs,_front_line_rules2.default.warning);str='<div class="paragraph">'+secs.join('</div><div class="paragraph">')+'</div>';str=_wrapper_rules2.default.parse(str,_wrapper_rules2.default.icon);str=_wrapper_rules2.default.parse(str,_wrapper_rules2.default.italic);str=_wrapper_rules2.default.parse(str,_wrapper_rules2.default.strike);str=_wrapper_rules2.default.parse(str,_wrapper_rules2.default.strong);return str};var handleCodeRules=function handleCodeRules(str){if(!str)return str;var moreToReplace=true;while(moreToReplace){var idx1=str.indexOf('```');var idx2=str.indexOf('```',idx1+3);if(idx1<idx2){var codeStr=str.slice(idx1,idx2+4);var lang='';var file='';var topStr=(codeStr.match(/```(.+)\n/)||[])[1];if(topStr){var _idx=topStr.indexOf('[');var _idx2=topStr.indexOf(']');if(_idx<_idx2){file=topStr.slice(_idx+1,_idx2)}lang=topStr.replace('['+file+']','')}var langSpan='';if(lang){langSpan='<span class="language '+lang.toLowerCase()+'">'+lang+'</span>'}var fileSpan='';if(file){fileSpan='<span class="file '+lang.toLowerCase()+'">'+file+'</span>'}str=str.replace(codeStr,'[%-!code'+code.length+'!-%]');codeStr=codeStr.replace(topStr,'');codeStr=codeStr.replace('```','');codeStr=codeStr.replace('```','');code.push('\n        <div class="codeblock">\n          <span class="title-bar">\n            '+langSpan+'\n            '+fileSpan+'\n          </span>\n          <pre>\n            '+_code_rules2.default.parse(codeStr,lang)+'\n          </pre>\n        </div>')}else{moreToReplace=false}}console.log(code);return str};var handleInternalMarkers=function handleInternalMarkers(str){code.forEach(function(c,i){return str=str.replace('[%-!code'+i+'!-%]',c)});code=[];return str};var mark=exports.mark=function mark(str){str=handleCodeRules(str);str=handleParagraphBlocks(str);str=handleInternalMarkers(str);console.log(str);return str};;var _temp=function(){if(typeof __REACT_HOT_LOADER__==='undefined'){return}__REACT_HOT_LOADER__.register(code,'code','core/modules/markdown/mark.js');__REACT_HOT_LOADER__.register(handleParagraphBlocks,'handleParagraphBlocks','core/modules/markdown/mark.js');__REACT_HOT_LOADER__.register(handleCodeRules,'handleCodeRules','core/modules/markdown/mark.js');__REACT_HOT_LOADER__.register(handleInternalMarkers,'handleInternalMarkers','core/modules/markdown/mark.js');__REACT_HOT_LOADER__.register(mark,'mark','core/modules/markdown/mark.js')}();;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,