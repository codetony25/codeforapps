'use strict';exports.__esModule=true;var animationStyle=function animationStyle(){return{'@keyframes bounce':{'0%, 20%, 50%, 80%, 100%':{transform:'translateY(0)'},'40%':{transform:'translateY(-30px)'},'60%':{transform:'translateY(-15px)'}},'@keyframes spin':{'0%':{transform:'rotate(0deg)'},'100%':{transform:'rotate(360deg)'}},'@keyframes logo-loading':{'0%':{opacity:1},'100%':{opacity:0.5}},'@keyframes logo-slide-left':{'100%':{transform:'translate(-210%, 0)',opacity:1}},'@keyframes logo-slide-right':{'100%':{transform:'translate(210%, 0)',opacity:1}},'@keyframes logo-opacity-in':{'100%':{opacity:1}},'@keyframes logo-slide-right-rotate':{'100%':{transform:'translate(460%, 0%) rotate(-20deg)',opacity:1}}}};var equalizerKeyframe=function equalizerKeyframe(){var equalizeKeyframeObject={};var keyframeMaxPercentage=100;var percentIncreaseBy=4;for(var i=0;i<=keyframeMaxPercentage;i+=percentIncreaseBy){switch(i){case 0:case 36:case 48:case 64:case 72:case 80:case 88:case 96:case 100:{equalizeKeyframeObject[i+'%']={height:48};break}case 4:{equalizeKeyframeObject[i+'%']={height:42};break}case 24:case 32:case 44:{equalizeKeyframeObject[i+'%']={height:40};break}case 12:case 20:case 52:case 68:{equalizeKeyframeObject[i+'%']={height:30};break}case 16:case 40:case 76:case 92:{equalizeKeyframeObject[i+'%']={height:20};break}case 28:case 56:{equalizeKeyframeObject[i+'%']={height:10};break}}}return equalizeKeyframeObject};var _default=animationStyle;exports.default=_default;;var _temp=function(){if(typeof __REACT_HOT_LOADER__==='undefined'){return}__REACT_HOT_LOADER__.register(animationStyle,'animationStyle','styles/shared/animation.style.js');__REACT_HOT_LOADER__.register(equalizerKeyframe,'equalizerKeyframe','styles/shared/animation.style.js');__REACT_HOT_LOADER__.register(_default,'default','styles/shared/animation.style.js')}();;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuaW1hdGlvbi5zdHlsZS5qcyJdLCJuYW1lcyI6WyJhbmltYXRpb25TdHlsZSIsInRyYW5zZm9ybSIsIm9wYWNpdHkiLCJlcXVhbGl6ZXJLZXlmcmFtZSIsImVxdWFsaXplS2V5ZnJhbWVPYmplY3QiLCJrZXlmcmFtZU1heFBlcmNlbnRhZ2UiLCJwZXJjZW50SW5jcmVhc2VCeSIsImkiLCJoZWlnaHQiXSwibWFwcGluZ3MiOiJxQ0FBQSxHQUFNQSxnQkFBaUIsUUFBakJBLGVBQWlCLEVBQU0sQ0FDM0IsTUFBTyxDQUNMLG9CQUFxQixDQUNuQiwwQkFBMkIsQ0FDekJDLFVBQVcsZUFEYyxDQURSLENBSW5CLE1BQU8sQ0FDTEEsVUFBVyxtQkFETixDQUpZLENBT25CLE1BQU8sQ0FDTEEsVUFBVyxtQkFETixDQVBZLENBRGhCLENBWUwsa0JBQW1CLENBQ2pCLEtBQU0sQ0FDSkEsVUFBVyxjQURQLENBRFcsQ0FJakIsT0FBUSxDQUNOQSxVQUFXLGdCQURMLENBSlMsQ0FaZCxDQW9CTCwwQkFBMkIsQ0FDekIsS0FBTSxDQUNKQyxRQUFTLENBREwsQ0FEbUIsQ0FJekIsT0FBUSxDQUNOQSxRQUFTLEdBREgsQ0FKaUIsQ0FwQnRCLENBNEJMLDZCQUE4QixDQUM1QixPQUFRLENBQ05ELFVBQVcscUJBREwsQ0FFTkMsUUFBUyxDQUZILENBRG9CLENBNUJ6QixDQWtDTCw4QkFBK0IsQ0FDN0IsT0FBUSxDQUNORCxVQUFXLG9CQURMLENBRU5DLFFBQVMsQ0FGSCxDQURxQixDQWxDMUIsQ0F3Q0wsNkJBQThCLENBQzVCLE9BQVEsQ0FDTkEsUUFBUyxDQURILENBRG9CLENBeEN6QixDQTZDTCxxQ0FBc0MsQ0FDcEMsT0FBUSxDQUNORCxVQUFXLG9DQURMLENBRU5DLFFBQVMsQ0FGSCxDQUQ0QixDQTdDakMsQ0FvRFIsQ0FyREQsQ0EyREEsR0FBTUMsbUJBQW9CLFFBQXBCQSxrQkFBb0IsRUFBTSxDQUM5QixHQUFNQyx3QkFBeUIsRUFBL0IsQ0FDQSxHQUFNQyx1QkFBd0IsR0FBOUIsQ0FDQSxHQUFNQyxtQkFBb0IsQ0FBMUIsQ0FFQSxJQUFLLEdBQUlDLEdBQUksQ0FBYixDQUFnQkEsR0FBS0YscUJBQXJCLENBQTRDRSxHQUFLRCxpQkFBakQsQ0FBb0UsQ0FFbEUsT0FBUUMsQ0FBUixFQUNFLElBQUssRUFBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssSUFBTCxDQUFVLENBQ1JILHVCQUEwQkcsQ0FBMUIsTUFBa0MsQ0FDaENDLE9BQVEsRUFEd0IsQ0FBbEMsQ0FHQSxLQUNELENBQ0QsSUFBSyxFQUFMLENBQVEsQ0FDTkosdUJBQTBCRyxDQUExQixNQUFrQyxDQUNoQ0MsT0FBUSxFQUR3QixDQUFsQyxDQUdBLEtBQ0QsQ0FDRCxJQUFLLEdBQUwsQ0FDQSxJQUFLLEdBQUwsQ0FDQSxJQUFLLEdBQUwsQ0FBUyxDQUNQSix1QkFBMEJHLENBQTFCLE1BQWtDLENBQ2hDQyxPQUFRLEVBRHdCLENBQWxDLENBR0EsS0FDRCxDQUNELElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUFTLENBQ1BKLHVCQUEwQkcsQ0FBMUIsTUFBa0MsQ0FDaENDLE9BQVEsRUFEd0IsQ0FBbEMsQ0FHQSxLQUNELENBQ0QsSUFBSyxHQUFMLENBQ0EsSUFBSyxHQUFMLENBQ0EsSUFBSyxHQUFMLENBQ0EsSUFBSyxHQUFMLENBQVMsQ0FDUEosdUJBQTBCRyxDQUExQixNQUFrQyxDQUNoQ0MsT0FBUSxFQUR3QixDQUFsQyxDQUdBLEtBQ0QsQ0FDRCxJQUFLLEdBQUwsQ0FDQSxJQUFLLEdBQUwsQ0FBUyxDQUNQSix1QkFBMEJHLENBQTFCLE1BQWtDLENBQ2hDQyxPQUFRLEVBRHdCLENBQWxDLENBR0EsS0FDRCxDQXJESCxDQXVERCxDQUVELE1BQU9KLHVCQUNSLENBakVELEMsYUFxRWVKLGMsbUlBaElUQSxjLG9GQTJEQUcsaUIiLCJmaWxlIjoiYW5pbWF0aW9uLnN0eWxlLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90b255bmd1eWVuL0lkZWFQcm9qZWN0cy9jb2RlZm9yYXBwcy90b29scyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFuaW1hdGlvblN0eWxlID0gKCkgPT4ge1xuICByZXR1cm4ge1xuICAgICdAa2V5ZnJhbWVzIGJvdW5jZSc6IHtcbiAgICAgICcwJSwgMjAlLCA1MCUsIDgwJSwgMTAwJSc6IHtcbiAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgwKSdcbiAgICAgIH0sXG4gICAgICAnNDAlJzoge1xuICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKC0zMHB4KSdcbiAgICAgIH0sXG4gICAgICAnNjAlJzoge1xuICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKC0xNXB4KSdcbiAgICAgIH1cbiAgICB9LFxuICAgICdAa2V5ZnJhbWVzIHNwaW4nOiB7XG4gICAgICAnMCUnOiB7XG4gICAgICAgIHRyYW5zZm9ybTogJ3JvdGF0ZSgwZGVnKSdcbiAgICAgIH0sXG4gICAgICAnMTAwJSc6IHtcbiAgICAgICAgdHJhbnNmb3JtOiAncm90YXRlKDM2MGRlZyknXG4gICAgICB9XG4gICAgfSxcbiAgICAnQGtleWZyYW1lcyBsb2dvLWxvYWRpbmcnOiB7XG4gICAgICAnMCUnOiB7XG4gICAgICAgIG9wYWNpdHk6IDFcbiAgICAgIH0sXG4gICAgICAnMTAwJSc6IHtcbiAgICAgICAgb3BhY2l0eTogMC41XG4gICAgICB9XG4gICAgfSxcbiAgICAnQGtleWZyYW1lcyBsb2dvLXNsaWRlLWxlZnQnOiB7XG4gICAgICAnMTAwJSc6IHtcbiAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlKC0yMTAlLCAwKScsXG4gICAgICAgIG9wYWNpdHk6IDFcbiAgICAgIH1cbiAgICB9LFxuICAgICdAa2V5ZnJhbWVzIGxvZ28tc2xpZGUtcmlnaHQnOiB7XG4gICAgICAnMTAwJSc6IHtcbiAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlKDIxMCUsIDApJyxcbiAgICAgICAgb3BhY2l0eTogMVxuICAgICAgfVxuICAgIH0sXG4gICAgJ0BrZXlmcmFtZXMgbG9nby1vcGFjaXR5LWluJzoge1xuICAgICAgJzEwMCUnOiB7XG4gICAgICAgIG9wYWNpdHk6IDFcbiAgICAgIH1cbiAgICB9LFxuICAgICdAa2V5ZnJhbWVzIGxvZ28tc2xpZGUtcmlnaHQtcm90YXRlJzoge1xuICAgICAgJzEwMCUnOiB7XG4gICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZSg0NjAlLCAwJSkgcm90YXRlKC0yMGRlZyknLFxuICAgICAgICBvcGFjaXR5OiAxXG4gICAgICB9XG4gICAgfVxuICB9O1xufTtcblxuLyoqXG4gKiBTZXRzIHVwIG91ciBlcXVhbGl6ZXIga2V5ZnJhbWUgYmVjYXVzZSBpdCBoYXMgYSBsb3Qgb2YgcGVyY2VudGFnZXMgdG8gYmVcbiAqIGFjY291bnRlZCBmb3IuXG4gKi9cbmNvbnN0IGVxdWFsaXplcktleWZyYW1lID0gKCkgPT4ge1xuICBjb25zdCBlcXVhbGl6ZUtleWZyYW1lT2JqZWN0ID0ge307XG4gIGNvbnN0IGtleWZyYW1lTWF4UGVyY2VudGFnZSA9IDEwMDtcbiAgY29uc3QgcGVyY2VudEluY3JlYXNlQnkgPSA0O1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDw9IGtleWZyYW1lTWF4UGVyY2VudGFnZTsgaSArPSBwZXJjZW50SW5jcmVhc2VCeSkge1xuICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLW1hZ2ljLW51bWJlcnMgKi9cbiAgICBzd2l0Y2ggKGkpIHtcbiAgICAgIGNhc2UgMDpcbiAgICAgIGNhc2UgMzY6XG4gICAgICBjYXNlIDQ4OlxuICAgICAgY2FzZSA2NDpcbiAgICAgIGNhc2UgNzI6XG4gICAgICBjYXNlIDgwOlxuICAgICAgY2FzZSA4ODpcbiAgICAgIGNhc2UgOTY6XG4gICAgICBjYXNlIDEwMDoge1xuICAgICAgICBlcXVhbGl6ZUtleWZyYW1lT2JqZWN0W2Ake2l9JWBdID0ge1xuICAgICAgICAgIGhlaWdodDogNDhcbiAgICAgICAgfTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIDQ6IHtcbiAgICAgICAgZXF1YWxpemVLZXlmcmFtZU9iamVjdFtgJHtpfSVgXSA9IHtcbiAgICAgICAgICBoZWlnaHQ6IDQyXG4gICAgICAgIH07XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAyNDpcbiAgICAgIGNhc2UgMzI6XG4gICAgICBjYXNlIDQ0OiB7XG4gICAgICAgIGVxdWFsaXplS2V5ZnJhbWVPYmplY3RbYCR7aX0lYF0gPSB7XG4gICAgICAgICAgaGVpZ2h0OiA0MFxuICAgICAgICB9O1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgMTI6XG4gICAgICBjYXNlIDIwOlxuICAgICAgY2FzZSA1MjpcbiAgICAgIGNhc2UgNjg6IHtcbiAgICAgICAgZXF1YWxpemVLZXlmcmFtZU9iamVjdFtgJHtpfSVgXSA9IHtcbiAgICAgICAgICBoZWlnaHQ6IDMwXG4gICAgICAgIH07XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAxNjpcbiAgICAgIGNhc2UgNDA6XG4gICAgICBjYXNlIDc2OlxuICAgICAgY2FzZSA5Mjoge1xuICAgICAgICBlcXVhbGl6ZUtleWZyYW1lT2JqZWN0W2Ake2l9JWBdID0ge1xuICAgICAgICAgIGhlaWdodDogMjBcbiAgICAgICAgfTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIDI4OlxuICAgICAgY2FzZSA1Njoge1xuICAgICAgICBlcXVhbGl6ZUtleWZyYW1lT2JqZWN0W2Ake2l9JWBdID0ge1xuICAgICAgICAgIGhlaWdodDogMTBcbiAgICAgICAgfTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGVxdWFsaXplS2V5ZnJhbWVPYmplY3Q7XG59O1xuXG4vLyBhbmltYXRpb25TdHlsZSgpWydAa2V5ZnJhbWVzIGxvZ28tZXF1YWxpemUnXSA9IGVxdWFsaXplcktleWZyYW1lKCk7XG5cbmV4cG9ydCBkZWZhdWx0IGFuaW1hdGlvblN0eWxlO1xuIl19