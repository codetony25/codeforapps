'use strict';exports.__esModule=true;var animationStyle=function animationStyle(){return{'@keyframes bounce':{'0%, 20%, 50%, 80%, 100%':{transform:'translateY(0)'},'40%':{transform:'translateY(-30px)'},'60%':{transform:'translateY(-15px)'}},'@keyframes spin':{'0%':{transform:'rotate(0deg)'},'100%':{transform:'rotate(360deg)'}},'@keyframes logo-loading':{'0%':{opacity:1},'100%':{opacity:0.5}},'@keyframes logo-slide-left':{'100%':{transform:'translate(-210%, 0)',opacity:1}},'@keyframes logo-slide-right':{'100%':{transform:'translate(210%, 0)',opacity:1}},'@keyframes logo-opacity-in':{'100%':{opacity:1}},'@keyframes logo-slide-right-rotate':{'100%':{transform:'translate(460%, 0%) rotate(-20deg)',opacity:1}}}};var equalizerKeyframe=function equalizerKeyframe(){var equalizeKeyframeObject={};var keyframeMaxPercentage=100;var percentIncreaseBy=4;for(var i=0;i<=keyframeMaxPercentage;i+=percentIncreaseBy){switch(i){case 0:case 36:case 48:case 64:case 72:case 80:case 88:case 96:case 100:{equalizeKeyframeObject[i+'%']={height:48};break}case 4:{equalizeKeyframeObject[i+'%']={height:42};break}case 24:case 32:case 44:{equalizeKeyframeObject[i+'%']={height:40};break}case 12:case 20:case 52:case 68:{equalizeKeyframeObject[i+'%']={height:30};break}case 16:case 40:case 76:case 92:{equalizeKeyframeObject[i+'%']={height:20};break}case 28:case 56:{equalizeKeyframeObject[i+'%']={height:10};break}}}return equalizeKeyframeObject};var _default=animationStyle;exports.default=_default;;var _temp=function(){if(typeof __REACT_HOT_LOADER__==='undefined'){return}__REACT_HOT_LOADER__.register(animationStyle,'animationStyle','styles/shared/animation.style.js');__REACT_HOT_LOADER__.register(equalizerKeyframe,'equalizerKeyframe','styles/shared/animation.style.js');__REACT_HOT_LOADER__.register(_default,'default','styles/shared/animation.style.js')}();;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuaW1hdGlvbi5zdHlsZS5qcyJdLCJuYW1lcyI6WyJhbmltYXRpb25TdHlsZSIsInRyYW5zZm9ybSIsIm9wYWNpdHkiLCJlcXVhbGl6ZXJLZXlmcmFtZSIsImVxdWFsaXplS2V5ZnJhbWVPYmplY3QiLCJrZXlmcmFtZU1heFBlcmNlbnRhZ2UiLCJwZXJjZW50SW5jcmVhc2VCeSIsImkiLCJoZWlnaHQiXSwibWFwcGluZ3MiOiJxQ0FBQSxHQUFNQSxnQkFBaUIsUUFBakJBLGVBQWlCLEVBQU0sQ0FDM0IsTUFBTyxDQUNMLG9CQUFxQixDQUNuQiwwQkFBMkIsQ0FDekJDLFVBQVcsZUFEYyxDQURSLENBSW5CLE1BQU8sQ0FDTEEsVUFBVyxtQkFETixDQUpZLENBT25CLE1BQU8sQ0FDTEEsVUFBVyxtQkFETixDQVBZLENBRGhCLENBWUwsa0JBQW1CLENBQ2pCLEtBQU0sQ0FDSkEsVUFBVyxjQURQLENBRFcsQ0FJakIsT0FBUSxDQUNOQSxVQUFXLGdCQURMLENBSlMsQ0FaZCxDQW9CTCwwQkFBMkIsQ0FDekIsS0FBTSxDQUNKQyxRQUFTLENBREwsQ0FEbUIsQ0FJekIsT0FBUSxDQUNOQSxRQUFTLEdBREgsQ0FKaUIsQ0FwQnRCLENBNEJMLDZCQUE4QixDQUM1QixPQUFRLENBQ05ELFVBQVcscUJBREwsQ0FFTkMsUUFBUyxDQUZILENBRG9CLENBNUJ6QixDQWtDTCw4QkFBK0IsQ0FDN0IsT0FBUSxDQUNORCxVQUFXLG9CQURMLENBRU5DLFFBQVMsQ0FGSCxDQURxQixDQWxDMUIsQ0F3Q0wsNkJBQThCLENBQzVCLE9BQVEsQ0FDTkEsUUFBUyxDQURILENBRG9CLENBeEN6QixDQTZDTCxxQ0FBc0MsQ0FDcEMsT0FBUSxDQUNORCxVQUFXLG9DQURMLENBRU5DLFFBQVMsQ0FGSCxDQUQ0QixDQTdDakMsQ0FvRFIsQ0FyREQsQ0EyREEsR0FBTUMsbUJBQW9CLFFBQXBCQSxrQkFBb0IsRUFBTSxDQUM5QixHQUFNQyx3QkFBeUIsRUFBL0IsQ0FDQSxHQUFNQyx1QkFBd0IsR0FBOUIsQ0FDQSxHQUFNQyxtQkFBb0IsQ0FBMUIsQ0FFQSxJQUFLLEdBQUlDLEdBQUksQ0FBYixDQUFnQkEsR0FBS0YscUJBQXJCLENBQTRDRSxHQUFLRCxpQkFBakQsQ0FBb0UsQ0FFbEUsT0FBUUMsQ0FBUixFQUNFLElBQUssRUFBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssSUFBTCxDQUFVLENBQ1JILHVCQUEwQkcsQ0FBMUIsTUFBa0MsQ0FDaENDLE9BQVEsRUFEd0IsQ0FBbEMsQ0FHQSxLQUNELENBQ0QsSUFBSyxFQUFMLENBQVEsQ0FDTkosdUJBQTBCRyxDQUExQixNQUFrQyxDQUNoQ0MsT0FBUSxFQUR3QixDQUFsQyxDQUdBLEtBQ0QsQ0FDRCxJQUFLLEdBQUwsQ0FDQSxJQUFLLEdBQUwsQ0FDQSxJQUFLLEdBQUwsQ0FBUyxDQUNQSix1QkFBMEJHLENBQTFCLE1BQWtDLENBQ2hDQyxPQUFRLEVBRHdCLENBQWxDLENBR0EsS0FDRCxDQUNELElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUNBLElBQUssR0FBTCxDQUFTLENBQ1BKLHVCQUEwQkcsQ0FBMUIsTUFBa0MsQ0FDaENDLE9BQVEsRUFEd0IsQ0FBbEMsQ0FHQSxLQUNELENBQ0QsSUFBSyxHQUFMLENBQ0EsSUFBSyxHQUFMLENBQ0EsSUFBSyxHQUFMLENBQ0EsSUFBSyxHQUFMLENBQVMsQ0FDUEosdUJBQTBCRyxDQUExQixNQUFrQyxDQUNoQ0MsT0FBUSxFQUR3QixDQUFsQyxDQUdBLEtBQ0QsQ0FDRCxJQUFLLEdBQUwsQ0FDQSxJQUFLLEdBQUwsQ0FBUyxDQUNQSix1QkFBMEJHLENBQTFCLE1BQWtDLENBQ2hDQyxPQUFRLEVBRHdCLENBQWxDLENBR0EsS0FDRCxDQXJESCxDQXVERCxDQUVELE1BQU9KLHVCQUNSLENBakVELEMsYUFxRWVKLGMsbUlBaElUQSxjLG9GQTJEQUcsaUIiLCJmaWxlIjoiYW5pbWF0aW9uLnN0eWxlLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90b255bmd1eWVuL0RvY3VtZW50cy9HaXRIdWIvY29kZWZvcmFwcHMvdG9vbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhbmltYXRpb25TdHlsZSA9ICgpID0+IHtcbiAgcmV0dXJuIHtcbiAgICAnQGtleWZyYW1lcyBib3VuY2UnOiB7XG4gICAgICAnMCUsIDIwJSwgNTAlLCA4MCUsIDEwMCUnOiB7XG4gICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoMCknXG4gICAgICB9LFxuICAgICAgJzQwJSc6IHtcbiAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgtMzBweCknXG4gICAgICB9LFxuICAgICAgJzYwJSc6IHtcbiAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgtMTVweCknXG4gICAgICB9XG4gICAgfSxcbiAgICAnQGtleWZyYW1lcyBzcGluJzoge1xuICAgICAgJzAlJzoge1xuICAgICAgICB0cmFuc2Zvcm06ICdyb3RhdGUoMGRlZyknXG4gICAgICB9LFxuICAgICAgJzEwMCUnOiB7XG4gICAgICAgIHRyYW5zZm9ybTogJ3JvdGF0ZSgzNjBkZWcpJ1xuICAgICAgfVxuICAgIH0sXG4gICAgJ0BrZXlmcmFtZXMgbG9nby1sb2FkaW5nJzoge1xuICAgICAgJzAlJzoge1xuICAgICAgICBvcGFjaXR5OiAxXG4gICAgICB9LFxuICAgICAgJzEwMCUnOiB7XG4gICAgICAgIG9wYWNpdHk6IDAuNVxuICAgICAgfVxuICAgIH0sXG4gICAgJ0BrZXlmcmFtZXMgbG9nby1zbGlkZS1sZWZ0Jzoge1xuICAgICAgJzEwMCUnOiB7XG4gICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZSgtMjEwJSwgMCknLFxuICAgICAgICBvcGFjaXR5OiAxXG4gICAgICB9XG4gICAgfSxcbiAgICAnQGtleWZyYW1lcyBsb2dvLXNsaWRlLXJpZ2h0Jzoge1xuICAgICAgJzEwMCUnOiB7XG4gICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZSgyMTAlLCAwKScsXG4gICAgICAgIG9wYWNpdHk6IDFcbiAgICAgIH1cbiAgICB9LFxuICAgICdAa2V5ZnJhbWVzIGxvZ28tb3BhY2l0eS1pbic6IHtcbiAgICAgICcxMDAlJzoge1xuICAgICAgICBvcGFjaXR5OiAxXG4gICAgICB9XG4gICAgfSxcbiAgICAnQGtleWZyYW1lcyBsb2dvLXNsaWRlLXJpZ2h0LXJvdGF0ZSc6IHtcbiAgICAgICcxMDAlJzoge1xuICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUoNDYwJSwgMCUpIHJvdGF0ZSgtMjBkZWcpJyxcbiAgICAgICAgb3BhY2l0eTogMVxuICAgICAgfVxuICAgIH1cbiAgfTtcbn07XG5cbi8qKlxuICogU2V0cyB1cCBvdXIgZXF1YWxpemVyIGtleWZyYW1lIGJlY2F1c2UgaXQgaGFzIGEgbG90IG9mIHBlcmNlbnRhZ2VzIHRvIGJlXG4gKiBhY2NvdW50ZWQgZm9yLlxuICovXG5jb25zdCBlcXVhbGl6ZXJLZXlmcmFtZSA9ICgpID0+IHtcbiAgY29uc3QgZXF1YWxpemVLZXlmcmFtZU9iamVjdCA9IHt9O1xuICBjb25zdCBrZXlmcmFtZU1heFBlcmNlbnRhZ2UgPSAxMDA7XG4gIGNvbnN0IHBlcmNlbnRJbmNyZWFzZUJ5ID0gNDtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8PSBrZXlmcmFtZU1heFBlcmNlbnRhZ2U7IGkgKz0gcGVyY2VudEluY3JlYXNlQnkpIHtcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1tYWdpYy1udW1iZXJzICovXG4gICAgc3dpdGNoIChpKSB7XG4gICAgICBjYXNlIDA6XG4gICAgICBjYXNlIDM2OlxuICAgICAgY2FzZSA0ODpcbiAgICAgIGNhc2UgNjQ6XG4gICAgICBjYXNlIDcyOlxuICAgICAgY2FzZSA4MDpcbiAgICAgIGNhc2UgODg6XG4gICAgICBjYXNlIDk2OlxuICAgICAgY2FzZSAxMDA6IHtcbiAgICAgICAgZXF1YWxpemVLZXlmcmFtZU9iamVjdFtgJHtpfSVgXSA9IHtcbiAgICAgICAgICBoZWlnaHQ6IDQ4XG4gICAgICAgIH07XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSA0OiB7XG4gICAgICAgIGVxdWFsaXplS2V5ZnJhbWVPYmplY3RbYCR7aX0lYF0gPSB7XG4gICAgICAgICAgaGVpZ2h0OiA0MlxuICAgICAgICB9O1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgMjQ6XG4gICAgICBjYXNlIDMyOlxuICAgICAgY2FzZSA0NDoge1xuICAgICAgICBlcXVhbGl6ZUtleWZyYW1lT2JqZWN0W2Ake2l9JWBdID0ge1xuICAgICAgICAgIGhlaWdodDogNDBcbiAgICAgICAgfTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIDEyOlxuICAgICAgY2FzZSAyMDpcbiAgICAgIGNhc2UgNTI6XG4gICAgICBjYXNlIDY4OiB7XG4gICAgICAgIGVxdWFsaXplS2V5ZnJhbWVPYmplY3RbYCR7aX0lYF0gPSB7XG4gICAgICAgICAgaGVpZ2h0OiAzMFxuICAgICAgICB9O1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgMTY6XG4gICAgICBjYXNlIDQwOlxuICAgICAgY2FzZSA3NjpcbiAgICAgIGNhc2UgOTI6IHtcbiAgICAgICAgZXF1YWxpemVLZXlmcmFtZU9iamVjdFtgJHtpfSVgXSA9IHtcbiAgICAgICAgICBoZWlnaHQ6IDIwXG4gICAgICAgIH07XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAyODpcbiAgICAgIGNhc2UgNTY6IHtcbiAgICAgICAgZXF1YWxpemVLZXlmcmFtZU9iamVjdFtgJHtpfSVgXSA9IHtcbiAgICAgICAgICBoZWlnaHQ6IDEwXG4gICAgICAgIH07XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBlcXVhbGl6ZUtleWZyYW1lT2JqZWN0O1xufTtcblxuLy8gYW5pbWF0aW9uU3R5bGUoKVsnQGtleWZyYW1lcyBsb2dvLWVxdWFsaXplJ10gPSBlcXVhbGl6ZXJLZXlmcmFtZSgpO1xuXG5leHBvcnQgZGVmYXVsdCBhbmltYXRpb25TdHlsZTtcbiJdfQ==